\name{vertmap}
\alias{vertmap}
\title{Make a simple map to visualize VertNet data.}
\usage{
  vertmap(input = NULL, mapdatabase = "world",
    region = ".", geom = geom_point, jitter = NULL)
}
\arguments{
  \item{input}{A data.frame, e.g. from calling
  vertoccurrence. The data.frame has to have columns named
  "Latitude" and "Longitude".}

  \item{mapdatabase}{The map database to use in mapping.
  What you choose here determines what you can choose in
  the region parameter. One of: county, state, usa, world,
  world2, france, italy, or nz.}

  \item{region}{The region of the world to map. From the
  maps package, run
  \code{sort(unique(map_data("world")$region))} to see
  region names for the world database layer, or e.g.,
  \code{sort(unique(map_data("state")$region))} for the
  state layer.}

  \item{geom}{The geom to use, one of geom_point or
  geom_jitter. Don't quote them.}

  \item{jitter}{If you use jitter, the amount by which to
  jitter points in width, height, or both.}
}
\value{
  Map (using ggplot2 package) of points on a world map.
}
\description{
  Basic function to plot your lat/long data on a map.
}
\details{
  vertmap Takes care of cleaning up the data.frame
  (removing NA's, etc.)  returned from other rvernet
  functions, and creating the map. This function gives a
  simple map of your data.  You can look at the code behing
  the function itself if you want to build on it to make a
  map according to your specfications.
}
\examples{
\dontrun{
# example 1
out <- vertoccurrence(t="Junco hyemalis", grp="bird", num=100)
vertmap(input = out) # make a map using vertmap

# example 2
out <- vertoccurrence(q="larva",num=100)
vertmap(input = out) # make a map using vertmap

# Many species
splist <- splist <- c("Accipiter erythronemius", "Junco hyemalis", "Aix sponsa", "Haliaeetus leucocephalus",
		"Corvus corone", "Threskiornis molucca", "Merops malimbicus")
out <- lapply(splist, function(x) vertoccurrence(t=x, grp="bird", num=500))
vertmap(out)
}
}

